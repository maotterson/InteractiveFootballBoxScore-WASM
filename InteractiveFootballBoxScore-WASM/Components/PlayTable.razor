@using InteractiveFootballBoxScore_WASM.State
@using PlayByPlayParser.Models
@inject InteractiveFootballBoxScore_WASM.State.PlayState PlayState
@inject GameState GameState

<table class="table">
    <thead>
        <tr>
        @foreach(string header in headers)
        {
            <th>@header</th>
        }
        </tr>
    </thead>
    
    @if(PlayList != null)
    {
        <tbody>
        @foreach(Play play in PlayList)
        {
            <tr
                @onmouseover="() => OnPlaySelected(play)">
                <td>@play.PlayIndex</td>
                <td>@play.Quarter</td>
                <td>@play.Time</td>
                <td>@play.Down</td>
                <td>@play.ToGo</td>
                <td>@play.Location</td>
                <td>@play.Summary</td>
            </tr>
        }
        </tbody>
    }
</table>

@code {
    private string[] headers = { "Play", "Quarter", "Time", "Down", "To Go", "Location", "Summary" };

    public List<Play>? PlayList => GameState.CurrentGame.PlayList;

    protected override void OnInitialized()
    {
        PlayState.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        PlayState.OnChange -= StateHasChanged;
    }

    private void OnPlaySelected(Play play)
    {
        PlayState.SetCurrentPlay(play);
    }
}

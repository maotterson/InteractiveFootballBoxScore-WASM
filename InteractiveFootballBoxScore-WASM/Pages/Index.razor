@page "/"
@using InteractiveFootballBoxScore_WASM.Components
@using PlayByPlayParser
@using PlayByPlayParser.Models
@inject HttpClient Http
@inject State.PlayState PlayState
@inject State.GameState GameState

<PageTitle>Index</PageTitle>

<h1>Play-by-Play</h1>
<button @onclick="loadGame1">Sample Game 1</button>
<button @onclick="loadGame2">Sample Game 2</button>
@if(GameState.CurrentGame != null)
{
    <MatchupBanner/>
    <PlayView/>
    <PlayTable/>
}

@code {
    private async Task loadGame1()
    {
        string sampleDataURI = "sample-data/GameDataFBRef.csv";
        await processData(sampleDataURI);
    }
    private async Task loadGame2()
    {
        string sampleDataURI = "sample-data/GameDataFBRef2.csv";
        await processData(sampleDataURI);
    }

    protected override async Task OnInitializedAsync()
    {
        string sampleDataURI = "sample-data/GameDataFBRef.csv";
        await processData(sampleDataURI);
    }

    private async Task processData(string dataURI)
    {
        var response = await Http.GetAsync(dataURI);

        if (response.IsSuccessStatusCode)
        {
            await GameState.ProcessGameDataFromHTTP(response);
        }

        PlayState.SetCurrentPlay(GameState.CurrentGame.PlayList[0]);
    }

}
